service: bpn-terminal-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: eu-west-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: bpn


  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"

functions:
  create:
    handler: bpn/create.main
    events:
      - http:
          path: bpn/create
          method: post
  
  get:
    handler: bpn/get.main
    events:
      - http:
          path: bpn/{id}
          method: get
  
  list:
    handler: bpn/list.main
    events:
      - http:
          path: bpn
          method: get
  
  update:
    handler: bpn/update.main
    events:
      - http:
          path: bpn/{id}
          method: put
